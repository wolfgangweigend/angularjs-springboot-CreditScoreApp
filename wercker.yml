box: combient/java-mvn  
build:
  steps:
    # Build Inventory REST application
    - script:
        name: Maven install
        code: mvn install

push:
  steps:
    # Push to public docker repo Container Registry (CR)
    - internal/docker-push:
        tag: latest
        repository: wcr.io/wolfgangweigend/rest-creditscore
        cmd: java -jar  /pipeline/source/target/loan-0.1.0.war


deploy-to-cluster:
  box:
        id: alpine
        cmd: /bin/sh

  steps:        
    - kubectl:
        name: delete secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: delete secret ocrsecretWW; echo delete registry secret
        
    - kubectl:
        name: create secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry ocrsecretWW --docker-server=wcr.io --docker-username=$WERCKER_APPLICATION_OWNER_NAME --docker-password=$KUBERNETES_TOKEN --docker-email=$DOCKER_EMAIL; echo create registry secret

    - kubectl:
        name: delete deployment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: delete deployment rest-creditscoreWW; echo delete deplyment  
    
    - kubectl:
        name: create deployment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create -f $WERCKER_ROOT/creditscore-deployment.yaml; echo create deployment

    - kubectl:
        name: expose service
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: expose deployment rest-creditscoreWW --type=LoadBalancer --name=rest-creditscoreWW --port=80 --target-port=8080; echo expose deployment


testapp:
  steps:
    - script:
        name: Run and Test microservice
        code: | 
              java -jar  /pipeline/source/target/loan-0.1.0.war &
              sleep 10
              CREDITSCORE_URL=http://localhost:8080/creditscore
              echo 'Microservice URL=' $CREDITSCORE_URL
              if curl -X POST -H "Content-Type: application/json" -X POST -d '{"firstname":"John","lastname":"Doe","dateofbirth":"01/01/2015","ssn":"111223333"}' $CREDITSCORE_URL | grep "firstname"
              then
                  # if the keyword is in the conent
                  echo "Test passed"
              else
                  echo "Test failed"
                  exit -1
              fi


restart:
  steps:
    # Restart Docker on OCCS using webhook
    - script:
        name: curl POST
        code: curl -k -X POST $DEPLOYMENT_WEBHOOK
